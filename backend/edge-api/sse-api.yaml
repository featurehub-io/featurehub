openapi: 3.0.1
info:
  title: FeatureServiceApi
  description: This describes the API clients use for accessing features
  version: "1.1.2"
paths:
  /features/:
    get:
      tags:
        - FeatureService
      parameters:
        - name: sdkUrl
          in: query
          description: "A list of API keys to retrieve information about"
          required: true
          schema:
            type: array
            items:
              type: string
      description: Requests all features for this sdkurl and disconnects
      operationId: getFeatureStates
      responses:
        "200":
          description: feature request successful, all environments you have permission to or that were found are returned
          headers:
            x-fh-version:
              required: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeatureEnvironmentCollection"
        "400":
          description: you didn't ask for any environments
          headers:
            x-fh-version:
              required: false
              schema:
                type: string
  /features/{sdkUrl}/{featureKey}:
    put:
      tags:
        - FeatureService
      parameters:
        - name: sdkUrl
          in: path
          description: "The API Key for the environment and service account"
          required: true
          schema:
            type: string
        - name: featureKey
          in: path
          description: "The key you wish to update/action"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureStateUpdate"
      description: "Updates the feature state if allowed."
      operationId: setFeatureState
      responses:
        "200":
          description: update was accepted but not actioned because feature is already in that state
          headers:
            x-fh-version:
              required: false
              schema:
                type: string
        "201":
          description: update was accepted and actioned
          headers:
            x-fh-version:
              required: false
              schema:
                type: string
        "202":
          description: Neither lock or value was changing
        "400":
          description: you have made a request that doesn't make sense. e.g. it has no data
        "403":
          description: update was not accepted, attempted change is outside the permissions of this user
        "404":
          description: something about the presented data isn't right and we couldn't find it, could be the service key, the environment or the feature
        "412":
          description: you have made a request that isn't possible. e.g. changing a value without unlocking it.
components:
  schemas:
    FeatureStateUpdate:
      type: object
      properties:
        value:
          description: "the new value"
        updateValue:
          type: boolean
          description: "indicates whether you are trying to update the value, as value can be null"
        lock:
          description: "set only if you wish to lock or unlock, otherwise null"
          type: boolean
    SSEResultState:
      type: string
      enum:
        - ack
        - bye
        - failure
        - features
        - feature
        - delete_feature
    FeatureEnvironmentCollection:
      description: "This represents a collection of features as per a request from a GET api. GET's can request multiple API Keys at the same time."
      x-renamed-from: Environment
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        features:
          type: array
          items:
            $ref: "#/components/schemas/FeatureState"
    FeatureState:
      required:
        - key
        - id
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        l:
          description: "Is this feature locked. Usually this doesn't matter because the value is the value, but for FeatureInterceptors it can matter."
          type: boolean
        version:
          description: "The version of the feature, this allows features to change values and it means we don't trigger events"
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/FeatureValueType"
        value:
          description: "the current value"
        environmentId:
          description: "This field is filled in from the client side in the GET api as the GET api is able to request multiple environments.
                        It is never passed from the server, as an array of feature states is wrapped in an environment."
          type: string
          format: uuid
        strategies:
          type: array
          items:
            $ref: "#/components/schemas/FeatureRolloutStrategy"
    FeatureRolloutStrategy:
      description: "This is the model for the rollout strategy as required by Dacha and Edge"
      allOf:
        - $ref: "#/components/schemas/BaseRolloutStrategy"
        - type: object
          required:
            - id
            - attributes
          properties:
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/FeatureRolloutStrategyAttribute"
    FeatureRolloutStrategyAttribute:
      allOf:
        - $ref: "#/components/schemas/BaseRolloutStrategyAttribute"
        - type: object
          required:
            - conditional
            - fieldName
            - type


