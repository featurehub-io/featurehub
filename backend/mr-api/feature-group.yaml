openapi: 3.0.1
info:
  title: ManagementResourceApi
  description: This describes the API clients use for accessing features. This reflects the API from 1.5.7 onwards.
paths:
  /mr-api/application/{appId}/feature-groups:
    parameters:
      - name: appId
        description: "The id of the application to find"
        in: path
        schema:
          type: string
          format: uuid
        required: true
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      parameters:
        - name: filter
          description: "A filter to apply to the features - partial match of key or description"
          in: query
          schema:
            type: string
          required: false
        - name: max
          description: "The maximum number of features to get for this page"
          in: query
          schema:
            type: integer
          required: false
        - name: page
          description: "The page number of the results. 0 indexed."
          in: query
          schema:
            type: integer
          required: false
        - name: sortOrder
          in: query
          schema:
            $ref: "#/components/schemas/SortOrder"
          required: false
        - name: environmentId
          description: "Match based on environment id"
          in: query
          schema:
            type: string
            format: uuid
          required: false
      description: "Get feature groups for this application"
      operationId: listFeatureGroups
      responses:
        200:
          description: "List of feature groups"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureGroupList"
        401:
          description: "no permission"
        404:
          description: "no application"
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      description: "Get feature groups for this application"
      operationId: createFeatureGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureGroupCreate"
      responses:
        201:
          description: "Feature Group Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureGroupListGroup"
        400:
          description: "bad request"
        409:
          description: "duplicate"
        401:
          description: "no permission"
        404:
          description: "no application"
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      description: "Get feature groups for this application"
      operationId: updateFeatureGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureGroupUpdate"
      responses:
        200:
          description: "Feature Group"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureGroup"
        401:
          description: "no permission"
        404:
          description: "no application or feature group"
        412:
          description: "attempt to update an old group"
        413:
          description: "attempted to update order position to one already in use"
        414:
          description: "attempting to update feature group for archived environment"
        415:
          description: "attempting to update feature group that is archived"
  /mr-api/application/{appId}/feature-groups/environment/{envId}:
    parameters:
      - name: appId
        description: "The id of the application"
        in: path
        schema:
          type: string
          format: uuid
        required: true
      - name: envId
        description: "The id of the feature group"
        in: path
        schema:
          type: string
          format: uuid
        required: true
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      description: "Get feature groups for this application"
      operationId: getFeatureGroupFeatures
      responses:
        200:
          description: "Feature Group features"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeatureGroupFeature"
        401:
          description: "no permission"
        404:
          description: "no application or feature group"
  /mr-api/application/{appId}/feature-groups/{fgId}:
    parameters:
      - name: appId
        description: "The id of the application"
        in: path
        schema:
          type: string
          format: uuid
        required: true
      - name: fgId
        description: "The id of the feature group"
        in: path
        schema:
          type: string
          format: uuid
        required: true
    delete:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      description: "Delete this feature group"
      operationId: deleteFeatureGroup
      responses:
        204:
          description: "Deleted"
        401:
          description: "no permission"
        404:
          description: "no application or feature group"
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - FeatureGroupService
      description: "Get feature groups for this application"
      operationId: getFeatureGroup
      responses:
        200:
          description: "Feature Group"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureGroup"
        401:
          description: "no permission"
        404:
          description: "no application or feature group"
components:
  schemas:
    FeatureGroupFeatureValueStrategy:
      type: object
      properties:
        featureGroupId:
          type: string
          format: uuid
        strategyName:
          type: string
        value:
          description: "value of strategy"
    FeatureGroupFeature:
      type: object
      required:
        - id
        - key
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        key:
          type: string
        value:
          description: "value (if any) associated with this feature for the associated strategy for this feature group"
        type:
          $ref: "#/components/schemas/FeatureValueType"
        locked:
          type: boolean
    FeatureGroup:
      type: object
      required:
        - id
        - name
        - features
        - environmentId
        - environmentName
        - version
        - order
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        order:
          type: integer
        description:
          type: string
        version:
          type: integer
          format: int64
        environmentId:
          type: string
          format: uuid
        environmentName:
          type: string
        features:
          default: []
          type: array
          items:
            $ref: "#/components/schemas/FeatureGroupFeature"
        strategies:
          nullable: true
          type: array
          description: "We only honour the first one"
          items:
            $ref: "#/components/schemas/FeatureGroupStrategy"
    FeatureGroupUpdateFeature:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        value:
          description: "value (if any) associated with this feature for this strategy"
    FeatureGroupStrategy:
      type: object
      required:
        - name
      properties:
        id:
          description: "unique id for this strategy"
          type: string
        name:
          description: "The strategy name"
          type: string
        percentage:
          nullable: true
          description: "value between 0 and 1000000 - for four decimal places"
          type: integer
        percentageAttributes:
          nullable: true
          default: []
          type: array
          description: "if you don't wish to apply percentage based on user id, you can use one or more attributes defined here"
          items:
            type: string
        attributes:
          nullable: true
          default: []
          type: array
          items:
            $ref: "#/components/schemas/RolloutStrategyAttribute"
    FeatureGroupCreate:
      type: object
      required:
        - name
        - environmentId
        - features
      description: "An update, everything is optional, we will only update what we update"
      properties:
        name:
          description: "allow changing the name"
          type: string
        description:
          type: string
        environmentId:
          description: "allow swapping the environment"
          type: string
          format: uuid
        features:
          type: array
          description: "allow updating the features"
          items:
            $ref: "#/components/schemas/FeatureGroupUpdateFeature"
        strategies:
          type: array
          description: "We only honour the first one"
          nullable: true
          items:
            $ref: "#/components/schemas/FeatureGroupStrategy"
    FeatureGroupUpdate:
      type: object
      description: "An update, everything is optional, we will only update what we update"
      required:
        - version
        - id
      properties:
        id:
          type: string
          format: uuid
        name:
          description: "allow changing the name"
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        features:
          type: array
          description: "allow updating the features"
          nullable: true
          items:
            $ref: "#/components/schemas/FeatureGroupUpdateFeature"
        strategies:
          type: array
          description: "We only honour the first one"
          nullable: true
          items:
            $ref: "#/components/schemas/FeatureGroupStrategy"
        order:
          nullable: true
          type: integer
        version:
          type: integer
          format: int64
    FeatureGroupListFeature:
      type: object
      required:
        - key
      properties:
        key:
          type: string
    FeatureGroupListGroup:
      type: object
      required:
        - id
        - name
        - environmentName
        - environmentId
        - order
        - features
        - version
        - hasStrategy
      properties:
        id:
          type: string
          format: uuid
        order:
          type: integer
        name:
          type: string
        description:
          type: string
        environmentName:
          type: string
        environmentId:
          type: string
          format: uuid
        version:
          type: integer
          format: int64
        hasStrategy:
          type: boolean
        features:
          type: array
          items:
            $ref: "#/components/schemas/FeatureGroupListFeature"
    FeatureGroupList:
      type: object
      required:
        - count
        - featureGroups
      properties:
        count:
          type: integer
        featureGroups:
          type: array
          items:
            $ref: "#/components/schemas/FeatureGroupListGroup"
