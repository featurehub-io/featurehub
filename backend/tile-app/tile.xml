<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <tiles>
    <tile>io.featurehub.tiles:tile-java:[1.1,2)</tile>
  </tiles>

  <properties>
    <app.entrypoint>io.featurehub.Application</app.entrypoint>
    <app.port>8903</app.port>
    <build.version>0.0.1</build.version>
    <app.baseimage.prefix></app.baseimage.prefix>
    <!-- base image is a multi-arch fat manifest, we cannot pin against a sha for multi-arch builds -->
    <app.baseimage>${app.baseimage.prefix}featurehub/base_jdk:1.12</app.baseimage>
    <app.imagename>${project.artifactId}</app.imagename>
    <docker.goal>dockerBuild</docker.goal>
    <docker.project.prefix>featurehub</docker.project.prefix>
  </properties>

  <profiles>
    <!-- this build ONLY goes to the local docker server -->
    <profile>
      <id>docker-cloud-build</id>
      <!-- otherwise don't active in tiles -->
      <activation>
        <property>
          <name>docker-cloud-build</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>${docker.goal}</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <allowInsecureRegistries>false</allowInsecureRegistries>
              <from>
                <image>${app.baseimage}</image>
              </from>
              <to>
                <image>${docker.project.prefix}/${app.imagename}:${build.version}</image>
              </to>
              <!-- we need this to get the version of the app in the MANIFEST.MF file -->
              <containerizingMode>packaged</containerizingMode>
              <extraDirectories>
                <paths>
                  <path>
                    <from>${project.basedir}/src/main/resources/deploy-defaults</from>
                    <into>/etc/common-config</into>
                  </path>
                </paths>
              </extraDirectories>
              <container>
                <user>999:999</user>
                <mainClass>bathe.BatheBooter</mainClass>
                <jvmFlags>
                  <jvmFlag>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmFlag>
<!--                  <jvmFlag>-Dio.netty.tryReflectionSetAccessible=true</jvmFlag>-->
                  <jvmFlag>-Dlog4j.configurationFile=/etc/common-config/log4j2.xml</jvmFlag>
                  <jvmFlag>--add-opens=java.base/java.nio=ALL-UNNAMED</jvmFlag>
                  <jvmFlag>-XX:+UseContainerSupport</jvmFlag>
                  <jvmFlag>-XX:MaxRAMPercentage=80</jvmFlag>
                </jvmFlags>
                <args>
                  <arg>-R${app.entrypoint}</arg>
                  <arg>-P/etc/common-config/common.properties</arg>
                  <arg>-P/etc/app-config/application.properties</arg>
                  <arg>-P/etc/app-config/secrets.properties</arg>
                </args>
                <ports>
                  <port>${app.port}</port>
                </ports>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
    ** we have a cloud build which is used to perform multi-architecture builds. These builds have to go
    ** directly to the destination Docker host, so they are only performed on integration test builds and final "main" builds.
    ** They are only different in that the default build is always "build" and they are multi-platform.
    -->
    <profile>
      <id>cloud-build</id>
      <!-- otherwise don't active in tiles -->
      <activation>
        <property>
          <name>cloud-build</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <allowInsecureRegistries>false</allowInsecureRegistries>
              <from>
                <image>${app.baseimage}</image>
                <auth>
                  <username>${env.SOURCE_REGISTRY_USERNAME}</username>
                  <password>${env.SOURCE_REGISTRY_PASSWORD}</password>
                </auth>
                <platforms>
                  <platform>
                    <architecture>amd64</architecture>
                    <os>linux</os>
                  </platform>
                  <platform>
                    <architecture>arm64</architecture>
                    <os>linux</os>
                  </platform>
                </platforms>
              </from>
              <to>
                <image>${docker.project.prefix}/${app.imagename}:${build.version}</image>
                <auth>
                  <username>${env.DEST_REGISTRY_USERNAME}</username>
                  <password>${env.DEST_REGISTRY_PASSWORD}</password>
                </auth>
              </to>
              <!-- we need this to get the version of the app in the MANIFEST.MF file -->
              <containerizingMode>packaged</containerizingMode>
              <extraDirectories>
                <paths>
                  <path>
                    <from>${project.basedir}/src/main/resources/deploy-defaults</from>
                    <into>/etc/common-config</into>
                  </path>
                </paths>
              </extraDirectories>
              <container>
                <user>999:999</user>
                <mainClass>bathe.BatheBooter</mainClass>
                <jvmFlags>
                  <jvmFlag>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</jvmFlag>
                  <!--                  <jvmFlag>-Dio.netty.tryReflectionSetAccessible=true</jvmFlag>-->
                  <jvmFlag>-Dlog4j.configurationFile=/etc/common-config/log4j2.xml</jvmFlag>
                  <jvmFlag>--add-opens=java.base/java.nio=ALL-UNNAMED</jvmFlag>
                  <jvmFlag>-XX:+UseContainerSupport</jvmFlag>
                  <jvmFlag>-XX:MaxRAMPercentage=80</jvmFlag>
                </jvmFlags>
                <args>
                  <arg>-R${app.entrypoint}</arg>
                  <arg>-P/etc/common-config/common.properties</arg>
                  <arg>-P/etc/app-config/application.properties</arg>
                  <arg>-P/etc/app-config/secrets.properties</arg>
                </args>
                <ports>
                  <port>${app.port}</port>
                </ports>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <FeatureHub-AppName>${project.artifactId}</FeatureHub-AppName>
              <FeatureHub-Version>${build.version}</FeatureHub-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
