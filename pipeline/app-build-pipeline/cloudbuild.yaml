timeout: 900s

substitutions:
  _GCS_CACHE_BUCKET: demohub-build-cache

steps:
  - waitFor: ['-']
    name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - -c
      - |
        git clone https://github.com/featurehub-io/featurehub.git &&
        git config --global user.email "you@example.com" &&
        git config --global user.name "Your Name" &&
        cd featurehub &&
        git remote add pr-source $_HEAD_REPO_URL && git fetch pr-source &&
        git checkout -b pr && git merge pr-source/$_HEAD_BRANCH -m "merge" && (git log -10 | cat)
    volumes:
      - name: user.home
        path: /root
    # now we need to get the maven and jib caches
  - waitFor: ['-']
    name: gcr.io/cloud-builders/gsutil
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        (
          gsutil cp gs://${_GCS_CACHE_BUCKET}/fh-m2-cache.tar.gz /tmp/m2-cache.tar.gz &&
          tar -xzf /tmp/m2-cache.tar.gz &&
          rm -rf /root/.m2/repository/io/featurehub
        ) || echo 'Cache not found'
    volumes:
      - name: user.home
        path: /root
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
    entrypoint: '/bin/sh'
    env:
      - MAVEN_OPTS=-Dmaven.wagon.http.retryHandler.count=3
    args:
      - '-c'
      - 'cd featurehub/backend && mvn -s ../pipeline/m2/settings.xml --no-transfer-progress install -f pom-first.xml'
    volumes:
      - name: user.home
        path: /root
# this next section deals with the Admin front-end. This is expensive to build every time, so we need to detect if
# it or its upstream dependencies have changed and only build it then
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
    entrypoint: '/bin/sh'
    # if anything in the front-end list of stuff has changed, touch the file `build-frontend` and the next two
    # steps will cause everything necessary to build. The pom-front-end.xml is just a dependency tree and change checker.
    env:
      - MAVEN_OPTS=-Dmaven.wagon.http.retryHandler.count=3
    args:
      - '-c'
      - 'cd featurehub && mvn -s pipeline/m2/settings.xml --no-transfer-progress validate -f pom-front-end.xml && touch front-end-changed.projects && _CHANGED=`wc -l < front-end-changed.projects|xargs` && if [ "$_CHANGED" != "0" ]; then touch build-frontend; fi'
#  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
#    entrypoint: '/bin/sh'
#    args:
#      - '-c'
#      - 'cd featurehub && ls -l'
    volumes:
      - name: user.home
        path: /root
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
    entrypoint: '/bin/sh'
    env:
      - MAVEN_OPTS=-Dmaven.wagon.http.retryHandler.count=3
    # these are required for the flutter build to work
    args:
      - '-c'
      - 'cd featurehub && if [ -f build-frontend ]; then mvn -s pipeline/m2/settings.xml --no-transfer-progress install -f admin-frontend/app_mr_layer/pom.xml; else true; fi'
    volumes:
      - name: user.home
        path: /root
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/flutter-build:1.9'
    # the version of flutter-build refers to the commit message. It is the base image used to build the front end. This will *only build the artifacts and
    # not generate the installable file required to build the docker images. That is not done in this pipeline (only when building the actual docker images)
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'cd featurehub && chmod u+x admin-frontend/pipeline-build.sh && admin-frontend/pipeline-build.sh'
    volumes:
      - name: user.home
        path: /root
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
    env:
      - MAVEN_OPTS=-Dmaven.wagon.http.retryHandler.count=3
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'cd featurehub && if [ -f all-build ]; then mvn -T4C -s pipeline/m2/settings.xml --no-transfer-progress install -f pom.xml; else true; fi'
    volumes:
      - name: user.home
        path: /root
  - name: 'us-central1-docker.pkg.dev/demohub-283022/demohub/build-images/maven:3.8.6-jdk-11'
    # run partial build if special "all-build" file is missing
    env:
      - MAVEN_OPTS=-Dmaven.wagon.http.retryHandler.count=3
    entrypoint: '/bin/sh'
    args:
      - '-c'
      - 'cd featurehub && if [ ! -f all-build ]; then mvn -T4C -s pipeline/m2/settings.xml --no-transfer-progress install -Dgib.disable=false -Dgib.referenceBranch=main -f pom.xml; else true; fi'
    volumes:
      - name: user.home
        path: /root
  # Saves the files to the GCS cache, but NEVER STORE OUR OWN
  - name: gcr.io/cloud-builders/gsutil
    dir: /root
    entrypoint: bash
    # Caches the local Maven repository.
    args:
      - -c
      - |
        rm -rf ~/.m2/repository/io/featurehub &&
        tar -czf /tmp/m2-cache.tar.gz .m2 &&
        gsutil cp /tmp/m2-cache.tar.gz gs://${_GCS_CACHE_BUCKET}/fh-m2-cache.tar.gz
    volumes:
      - name: user.home
        path: /root
options:
  machineType: 'N1_HIGHCPU_8'



