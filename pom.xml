<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.featurehub</groupId>
  <artifactId>featurehub-reactor</artifactId>
  <version>1.1.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>
    This builds the entire stack into JAR files, but does NOT generate the Docker images. The shell script in the
    backend folder does this (backend/build.sh).

    The Docker images are based on images in the pipeline/build folder
    but are built using JIB, the Maven plugin from Google which does not require Docker. The configuration of those
    images are controlled by backend/tile-app/tile.xml.

    To build this, ensure that you go to the backend folder and do a mvn -f pom-first.xml clean install

    Then build this file (we recommend mvn -T4C clean install)
  </description>

  <url>https://featurehub.io</url>
  <developers>
    <developer>
      <email>irina@featurehub.io</email>
      <id>isouthwell</id>
      <name>Irina Southwell</name>
      <organization>Anyways Labs Ltd</organization>
    </developer>

    <developer>
      <email>richard@featurehub.io</email>
      <id>rvowles</id>
      <name>Richard Vowles</name>
      <organization>Anyways Labs Ltd</organization>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache 2 with Commons Clause</name>
      <url>https://github.com/featurehub-io/featurehub/blob/master/LICENSE.txt</url>
    </license>
  </licenses>

  <modules>
    <module>backend/security-oauth</module>
    <module>backend/common-web</module>
    <module>backend/common-db</module>
    <module>backend/common-db-test</module>
    <module>backend/composite-jackson</module>
    <module>backend/composite-db-drivers</module>
    <module>backend/composite-ebean</module>
    <module>backend/composite-app</module>
    <module>backend/composite-jersey</module>
    <module>backend/composite-common</module>
    <module>backend/composite-parent</module>
    <module>backend/composite-logging</module>
    <module>backend/composite-logging-api</module>
    <module>backend/composite-prometheus</module>
    <module>backend/composite-test</module>
    <module>backend/edge-api</module>
    <module>backend/edge-common</module>
    <module>backend/edge-full</module>
    <module>backend/edge-rest</module>
    <module>backend/edge-stats-api</module>
    <module>backend/mr</module>
    <module>backend/mr-api</module>
    <module>backend/mr-api-java-server</module>
    <module>backend/mr-db-api</module>
    <module>backend/mr-db-sql</module>
    <module>backend/mr-db-models</module>
    <module>backend/mr-db-ebean</module>
    <module>backend/edge-feature-update-async-api</module>
    <module>backend/mr-publish-api</module>
    <module>backend/sdk-strategy-matchers</module>
    <module>backend/party-server</module>
    <module>backend/party-server-ish</module>
    <module>backend/dacha</module>
    <module>backend/dacha-api</module>
    <module>backend/dacha-client</module>
    <module>admin-frontend/app_mr_layer</module>
  </modules>

  <properties>
    <gib.disable>true</gib.disable>
  </properties>
</project>
